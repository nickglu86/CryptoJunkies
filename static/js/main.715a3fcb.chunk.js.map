{"version":3,"sources":["imgs/logo.png","components/BitcoinLogo.js","components/Header.js","components/Currency.js","components/Loader.js","components/Chart.js","pages/CryptoIndex.js","components/useApiRequest.js","components/NewsItem.js","components/PreloadedLogos.js","components/CryptoNewsFeed.js","pages/News.js","pages/DeFi.js","components/NftNewsFeed.js","pages/Nft.js","pages/Metrics.js","pages/BuyCrypto.js","pages/NotFound.js","pages/Learn.js","App.js","index.js"],"names":["BitcoinLogo","id","version","xmlns","xmlnsXlink","x","y","width","height","viewBox","xmlSpace","in","stdDeviation","dx","dy","result","floodColor","in2","operator","className","style","filter","fill","d","Header","src","logo","alt","to","Currency","name","image","symbol","price","volume","priceChange","marketcap","circulatingSupply","toFixed","toLocaleString","Loader","Chart","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","document","getElementById","display","catch","error","console","log","filteredCoins","coin","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","circulating_supply","CryptoIndex","useApiRequest","url","setData","isLoaded","setIsLoaded","setError","response","finally","NewsItem","title","description","href","PreloadedLogos","setIsLoading","cacheImages","srcArray","a","Promise","resolve","reject","img","Image","onload","onerror","promises","all","CryptoNewsFeed","process","message","articles","index","News","DeFi","NftNewsFeed","Nft","Metrics","BuyCrypto","NotFound","Learn","App","basename","path","component","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.715a3fcb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7b109fb6.png\";","const BitcoinLogo = () => {\r\n    return (\r\n        <div id=\"bitcoin\">\r\n                <svg\r\n                    version=\"1.1\"\r\n                    id=\"Layer_1\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                    x=\"0px\"\r\n                    y=\"0px\"\r\n                    width=\"100px\"\r\n                    height=\"100px\"\r\n                    viewBox=\"100 100 400 400\"\r\n                    xmlSpace=\"preserve\"\r\n                >\r\n                    <filter id=\"dropshadow\" height=\"130%\">\r\n                    <feGaussianBlur in=\"SourceAlpha\" stdDeviation={5} />\r\n                    <feOffset dx={0} dy={0} result=\"offsetblur\" />\r\n                    <feFlood floodColor=\"red\" />\r\n                    <feComposite in2=\"offsetblur\" operator=\"in\" />\r\n                    <feMerge>\r\n                        <feMergeNode />\r\n                        <feMergeNode in=\"SourceGraphic\" />\r\n                    </feMerge>\r\n                    </filter>\r\n                    <path\r\n                    className=\"path\"\r\n                    style={{ filter: \"url(#dropshadow)\" }}\r\n                    fill=\"#000000\"\r\n                    d=\"M446.089,261.45c6.135-41.001-25.084-63.033-67.769-77.735l13.844-55.532l-33.801-8.424l-13.48,54.068\r\n                    c-8.896-2.217-18.015-4.304-27.091-6.371l13.568-54.429l-33.776-8.424l-13.861,55.521c-7.354-1.676-14.575-3.328-21.587-5.073\r\n                    l0.034-0.171l-46.617-11.64l-8.993,36.102c0,0,25.08,5.746,24.549,6.105c13.689,3.42,16.159,12.478,15.75,19.658L208.93,357.23\r\n                    c-1.675,4.158-5.925,10.401-15.494,8.031c0.338,0.485-24.579-6.134-24.579-6.134l-9.631,40.468l36.843,9.188\r\n                    c8.178,2.051,16.209,4.19,24.098,6.217l-13.978,56.17l33.764,8.424l13.852-55.571c9.235,2.499,18.186,4.813,26.948,6.995\r\n                    l-13.802,55.309l33.801,8.424l13.994-56.061c57.648,10.902,100.998,6.502,119.237-45.627c14.705-41.979-0.731-66.193-31.06-81.984\r\n                    C425.008,305.984,441.655,291.455,446.089,261.45z M368.859,369.754c-10.455,41.983-81.128,19.285-104.052,13.589l18.562-74.404\r\n                    C306.28,314.65,379.774,325.975,368.859,369.754z M379.302,260.846c-9.527,38.187-68.358,18.781-87.442,14.023l16.828-67.489\r\n                    C327.767,212.14,389.234,221.02,379.302,260.846z\"\r\n                    />\r\n                </svg>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default BitcoinLogo;","import { Link } from 'react-router-dom';\r\nimport logo from '../imgs/logo.png';\r\nimport BitcoinLogo from './BitcoinLogo';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <header>\r\n            <div className=\"logo\">\r\n                <figure>\r\n                    <img src={logo} alt=\"Cypto Junkies logo\" />\r\n                    <BitcoinLogo />\r\n                    <figcaption>Crypto Junkies</figcaption> \r\n                </figure>\r\n            </div>\r\n          <nav>\r\n              <Link to=\"/\">Crypto Index</Link> \r\n              <Link to=\"/news\">News</Link> \r\n              <Link to=\"/defi\">DeFi</Link> \r\n              <Link to=\"/nft\">NFT</Link> \r\n              <Link to=\"/metrics\">Metrics</Link> \r\n              <Link to=\"/learn\">Learn</Link> \r\n              <Link to=\"/buycrypto\">Buy Crypto</Link> \r\n          </nav>\r\n          <span className=\"toggle-nav\"><span>Toggle navigation</span></span>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;","import React from 'react';\n\nconst Currency = ({ name, image, symbol, price, volume, priceChange, marketcap, circulatingSupply}) => {\n    return (\n        <div className=\"currency-container\">\n            <div className=\"chart-row\">\n                <div className=\"coin\">\n                    <img src={image} alt='crypto' />\n                    <h2>{name}</h2> \n                    <span className=\"coin-symbol\">{symbol}</span>\n                </div>\n                <div className=\"coin-data\">\n                  <p className=\"coin-price\">${price}</p>\n                 \n                  {priceChange < 0 ? (\n                        <p className=\"coin-percent red\">{priceChange.toFixed(2)}% <span>(24h)</span></p>\n                    ) : (\n                        <p className=\"coin-percent green\">{priceChange.toFixed(2)}%<span>(24h)</span></p>\n                \n                    )\n                    \n                   }\n                   <p className=\"coin-marketcap\">\n                     $ {marketcap.toLocaleString()}\n                     </p>\n                   <p className=\"coin-volume\">$ {volume.toLocaleString()}</p>\n                   <p className=\"circ-supply\"> \n                     <span className=\"coin-symbol\">{symbol}</span>  \n                      {circulatingSupply.toLocaleString()}\n                    </p>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Currency\n","const Loader = () => {\r\n    return (\r\n        <div id=\"loader-mask\" className=\"loader-wrapper\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default Loader;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Currency from './Currency';\r\nimport Loader from './Loader';\r\n\r\nfunction Chart(){\r\n    const [coins, setCoins] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n\r\n    useEffect( () => {\r\n        axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=25&page=1&sparkline=false')\r\n        .then(res => {\r\n          setCoins(res.data);\r\n          document.getElementById(\"loader-mask\").style.display = \"none\";\r\n        })\r\n        .catch(error => console.log(error));\r\n      }, []);\r\n     \r\n      const handleChange = e => {\r\n        setSearch(e.target.value)\r\n      }\r\n    \r\n      const filteredCoins = coins.filter( coin =>\r\n        coin.name.toLowerCase().includes(search.toLowerCase())\r\n        )\r\n    \r\n    \r\n    return (\r\n            <div className=\"crypto-chart\">\r\n                <Loader />\r\n                        {/* <div className=\"crypto-search\">\r\n                            <h1>Search a currency:</h1>\r\n                         </div> */}\r\n                        <div id=\"first-currency-container\" className=\"currency-container\">\r\n                          <div className=\"chart-row chart-header\">\r\n                            <div className=\"coin\">\r\n                               <form>\r\n                                    <input type=\"text\" placeholder=\"Search\" className=\"search-input\"  onChange={handleChange} />\r\n                                </form>\r\n                             </div>\r\n                            <div className=\"coin-data\">\r\n                              <p className=\"coin-price\">Price</p>\r\n                              <p className=\"coin-percent\">24h %</p>\r\n                              <p className=\"coin-marketcap\">Market Cap</p>\r\n                              <p className=\"coin-volume\"> Volume(24h)</p>\r\n                              <p className=\"circ-supply\">  Circulating Supply  </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {filteredCoins.map(coin => {\r\n                        return(\r\n                            <Currency key={coin.id} \r\n                            name={coin.name}\r\n                            image={coin.image}\r\n                            symbol={coin.symbol}\r\n                            marketcap={coin.market_cap}\r\n                            price={coin.current_price}\r\n                            priceChange={coin.price_change_percentage_24h}\r\n                            volume={coin.total_volume}\r\n                            circulatingSupply={coin.circulating_supply}\r\n                            />\r\n                        );\r\n                        })}\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Chart;","import Chart from \"../components/Chart\"\r\n\r\nconst CryptoIndex = () => {\r\n    return (  <section className=\"crypto-index\">\r\n                  <div className=\"page-header\">CryptoIndex Page</div> \r\n                  <Chart />\r\n              </section>\r\n             );\r\n}\r\n \r\nexport default CryptoIndex;","import axios from 'axios';\r\nimport { useEffect, useState } from \"react\";\r\n\r\n  const useApiRequest = url => {\r\n    const [data, setData] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [error, setError] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      const fetchData = () => {\r\n        axios\r\n          .get(url)\r\n          .then(response => {\r\n            setData(response.data);\r\n          })\r\n          .catch(error => {\r\n            setError(error);\r\n          })      \r\n          .finally(() => {\r\n            setIsLoaded(true);\r\n          });\r\n      };\r\n      fetchData();\r\n    }, [url]);\r\n  \r\n    return { error, isLoaded, data };\r\n  };\r\n\r\n  export default useApiRequest;\r\n  //https://gnews.io/api/v4/search?q=nft&lang=en&token=9e855350d69e4b90fc112768700fa185","import imgBcg from '../imgs/img-filler.jpg';\r\n\r\nconst NewsItem = ({title, description, url, image}) => {\r\n    return (\r\n        <a href={url} >\r\n            <div className=\"news-item\">\r\n                <figure >\r\n                     <img src={image} alt=\"new image\"></img>\r\n                </figure>\r\n                <div className=\"news-content\">\r\n                <h3>\r\n                        {title}\r\n                </h3>\r\n                <p>{description}</p>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    \r\n      );\r\n}\r\n \r\nexport default NewsItem;","import { render } from \"@testing-library/react\"\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst PreloadedLogos = () => {\r\n    const [isLoading, setIsLoading] = useState(true);   \r\n    useEffect(\r\n        () => {\r\n            const imgs = [\r\n                    \"https://assets.coingecko.com/coins/images/1/large/bitcoin.png?1547033579\",\r\n                    \"https://assets.coingecko.com/coins/images/279/large/ethereum.png?1595348880\",\r\n                    \"https://assets.coingecko.com/coins/images/975/large/cardano.png?1547034860\",\r\n                    \"https://assets.coingecko.com/coins/images/325/large/Tether-logo.png?1598003707\",\r\n                    \"https://assets.coingecko.com/coins/images/825/large/binance-coin-logo.png?1547034615\",\r\n                    \"https://assets.coingecko.com/coins/images/4128/large/coinmarketcap-solana-200.png?1616489452\",\r\n                    \"https://assets.coingecko.com/coins/images/44/large/xrp-symbol-white-128.png?1605778731\",\r\n                    \"https://assets.coingecko.com/coins/images/5/large/dogecoin.png?1547792256\",\r\n                    \"https://assets.coingecko.com/coins/images/12171/large/aJGBjJFU_400x400.jpg?1597804776\",\r\n                    \"https://assets.coingecko.com/coins/images/6319/large/USD_Coin_icon.png?1547042389\",\r\n                    \"https://assets.coingecko.com/coins/images/8284/large/luna1557227471663.png?1567147072\"\r\n               \r\n            ];\r\n            cacheImages(imgs);\r\n        }\r\n        ,[]);\r\n\r\n        const cacheImages = async (srcArray) => {\r\n            const promises = await srcArray.map((src) => {\r\n                return new Promise( function (resolve, reject) {\r\n                    const img = new Image();\r\n\r\n                    img.src = src;\r\n                    img.onload = resolve();\r\n                    img.onerror = reject();\r\n                });\r\n            });\r\n            await Promise.all(promises);\r\n            setIsLoading(false);\r\n        };\r\n\r\n    return(<div></div>);\r\n\r\n}\r\nexport default PreloadedLogos;","import useApiRequest from \"./useApiRequest\";\r\nimport Loader from \"./Loader\";\r\nimport NewsItem from \"./NewsItem\";\r\nimport PreloadedLogos from \"./PreloadedLogos\";\r\n\r\nconst CryptoNewsFeed = () => {\r\n    let { data, error, isLoaded } = useApiRequest(process.env.REACT_APP_CRYPTO_NEWS);\r\n\r\n    if (error !== null) {\r\n      return <div> Error: {error.message}</div>;\r\n    }\r\n    if (!isLoaded) {\r\n      return <Loader />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"news-feed\">\r\n        <PreloadedLogos />\r\n                {data.articles.map(({index, title, description, url, image}) => (\r\n                   <NewsItem key={index} title={title} description={description} url={url} image={image} />\r\n                ) ) }\r\n       </div>\r\n    );\r\n}\r\n \r\nexport default CryptoNewsFeed;","import CryptoNewsFeed from \"../components/CryptoNewsFeed\"\r\n\r\nconst News = () => {\r\n        return (  <section className=\"crypto-news\">\r\n                        <div className=\"page-header\">News Page</div> \r\n                        <CryptoNewsFeed />\r\n                    </section>\r\n                );\r\n}\r\n \r\nexport default News;","const DeFi = () => {\r\n    return (  <div  className=\"page-header\"> DeFi Page </div>  );\r\n}\r\n \r\nexport default DeFi;","import useApiRequest from \"./useApiRequest\";\r\nimport Loader from \"./Loader\";\r\nimport NewsItem from \"./NewsItem\";\r\n\r\nconst NftNewsFeed = () => {\r\n    let { data, error, isLoaded } = useApiRequest(process.env.REACT_APP_NFT_NEWS);\r\n\r\n    if (error !== null) {\r\n      return <div> Error: {error.message}</div>;\r\n    }\r\n    if (!isLoaded) {\r\n      return <Loader />;\r\n    }\r\n    return (\r\n        <div className=\"nfts\">\r\n             <div className=\"news-feed\">\r\n                {data.articles.map(({index, title, description, url, image}) => (\r\n                    <NewsItem id={index} title={title} description={description} url={url} image={image}  />\r\n                  ) ) }\r\n            </div>\r\n        </div>\r\n    );\r\n  };\r\n\r\n \r\nexport default NftNewsFeed;\r\n","import NftNewsFeed from \"../components/NftNewsFeed\";\r\n\r\nconst Nft = () => {\r\n    return (  \r\n        <section className=\"crypto-news\">\r\n            <div className=\"page-header\">  NFT Page</div> \r\n            <NftNewsFeed />\r\n        </section>\r\n    );\r\n}\r\n \r\nexport default Nft;","const Metrics = () => {\r\n    return (  \r\n              <section className=\"crypto-metrics\">\r\n                    <div className=\"page-header\">Metrics Page </div> \r\n                    <div className=\"fear-and-greed\" >\r\n                       <img src=\"https://alternative.me/crypto/fear-and-greed-index.png\" alt=\"Latest Crypto Fear & Greed Index\" />\r\n                    </div>\r\n                 </section>\r\n    );\r\n\r\n}\r\nexport default Metrics;","const BuyCrypto = () => {\r\n    return (  <div className=\"page-header\"> CryptoIndex Page </div>  );\r\n}\r\n \r\nexport default BuyCrypto;","const NotFound = () => {\r\n    return (  \r\n        <div className=\"404\">\r\n            <h2>404</h2>\r\n            <h2>Page is Not found</h2> \r\n        </div>\r\n   );\r\n}\r\n \r\nexport default NotFound;","const Learn = () => {\r\n    return (  <div  className=\"page-header\"> Learn Page </div>  );\r\n}\r\n \r\nexport default Learn;","import './App.css';\r\nimport Header from './components/Header';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport CryptoIndex from './pages/CryptoIndex';\r\nimport News from './pages/News';\r\nimport DeFi from './pages/DeFi';\r\nimport Nft from './pages/Nft';\r\nimport Metrics from './pages/Metrics';\r\nimport BuyCrypto from './pages/BuyCrypto';\r\nimport NotFound from './pages/NotFound';\r\nimport Learn from './pages/Learn';\r\n\r\nfunction App() {\r\n  return (\r\n      <Router basename=\"/crypto-site\">\r\n        <main>\r\n            <Header />\r\n            <Switch>\r\n              <Route path=\"/\" component={CryptoIndex}  exact/>\r\n              <Route path=\"/news\" component={News} />\r\n              <Route path=\"/defi\" component={DeFi} />\r\n              <Route path=\"/nft\" component={Nft} />\r\n              <Route path=\"/metrics\" component={Metrics} />\r\n              <Route path=\"/learn\" component={Learn} />\r\n              <Route path=\"/buycrypto\" component={BuyCrypto} />\r\n              <Route  component={NotFound} />\r\n            </Switch>\r\n        </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}